plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"

    // // sentry upload plugin for proguard
    // id "io.sentry.android.gradle" version "4.2.0"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "environment"

    productFlavors {
        dev {
            dimension "environment"
            applicationId "com.sablue.sotwo.dev"
            resValue "string", "app_name", "SOTWO DEV"
            resValue "string", "onelink_host", "dev-sablue.onelink.me"
        }
        stage {
            dimension "environment"
            applicationId "com.sablue.sotwo.dev"
            resValue "string", "app_name", "SOTWO QA"
            resValue "string", "onelink_host", "dev-sablue.onelink.me"
        }
        prod {
            dimension "environment"
            applicationId "com.sablue.sotwo"
            resValue "string", "app_name", "SOTWO"
            resValue "string", "onelink_host", "sablue.onelink.me"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

   namespace "com.sablue.sotwo"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.sablue.sotwo"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // vguard
    implementation files('lib/VGsecuOneInterfaceSDK.jar')
    // K-Defense R8 (for kb keypad)
    implementation files('lib/kmvkeypad.aar')
    // kotlin model serialization
    implementation 'com.google.code.gson:gson:2.10.1'
    // android material components
    implementation 'com.google.android.material:material:1.11.0'
}

// sentry {
//     debug = true

//     // proguard 업로드용 설정
//     includeProguardMapping = true
//     autoUploadProguardMapping = true

//     // 이하는 sentry dart plugin이 진행
//     // uploadNativeSymbols = false
//     // autoUploadNativeSymbols = false
//     // includeNativeSources = false
//     // includeSourceContext = false
//     // includeDependenciesReport = false
//     // telemetry = false
//     // tracingInstrumentation {
//     //     enabled = false
//     // }
        
//     // release에서만 proguard 진행
//     ignoredBuildTypes = [ "debug" ]
// }